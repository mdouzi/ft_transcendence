"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
# from dotenv import load_dotenv
from pathlib import Path

# load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


CLIENT_UID = os.getenv('CLIENT_UID')
CLIENT_SECRET = os.getenv('CLIENT_SECRET')

MACHINE_URL = os.getenv('MACHINE_URL')

# REDIRECT_URI = 'http://127.0.0.1:8000/api/auth/callback/'
MACHINE_URL = os.getenv('MACHINE_URL')
REDIRECT_URI = f'https://{MACHINE_URL}/api/auth/callback/'



AUTHORIZE_URL = "https://api.intra.42.fr/oauth/authorize"

TOKEN_URL = "https://api.intra.42.fr/oauth/token"

USER_INFO_URL = "https://api.intra.42.fr/v2/me"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3zx9dv0$+jukk6+@z^f_4r%s29hz%2za461o-06+)7dx&$g%k^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "POST",
    "PUT",
]


MACHINE_URL = os.getenv('MACHINE_URL')

ALLOWED_HOSTS = [
    "https://localhost", 
    "localhost", 
    "127.0.0.1",
    f"{MACHINE_URL}",
]

CORS_ALLOW_CREDENTIALS = True  # Allow cookies to be sent with the request
#
# CORS_ALLOWED_HEADERS = [
#     "Content-Type",
#     "Authorization",
#     "X-CSRFToken",
# ]

# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    #new
    'chat',
    'channels',
    'django_prometheus',
    'rest_framework',
    'account',
    'corsheaders',
    'rest_framework_simplejwt',
    'django_extensions',
    'rest_framework_simplejwt.token_blacklist',

    'friendship',
    # 'rest_friendship',
]

ASGI_APPLICATION = 'api.asgi.application'

# REST_FRIENDSHIP = {
#    'PERMISSION_CLASSES': [
#       'rest_framework.permissions.IsAuthenticated',
#    ],
#    'USER_SERIALIZER': 'rest_friendship.serializers.FriendSerializer',
# },
#new

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = 587  # Use 587 for TLS or 465 for SSL
EMAIL_USE_TLS = True  
EMAIL_USE_SSL = False

EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER') 
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD') 

REST_FRAMEWORK = {

    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),

    'ROTATE_REFRESH_TOKENS': True,  # creates a new refresh token on use
    'BLACKLIST_AFTER_ROTATION': False,  # Automatically blacklist the old token
    'UPDATE_LAST_LOGIN': False,
}
   
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",

        "NAME": os.getenv('DB_NAME'),
        "USER": os.getenv('DB_USER'),
        "PASSWORD": os.getenv('DB_PASSWD'),

        "HOST": "postgres", 
        "PORT": 5432,  
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',  # SQLite database engine
#         'NAME': BASE_DIR / 'db.sqlite3',         # Database file name
#     }
# }

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}

DATA_UPLOAD_MAX_MEMORY_SIZE = 52428800

MIDDLEWARE = [
    #new 
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',  
    #-----
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#new
CORS_ALLOWED_ORIGINS = [
    "https://localhost",  # Frontend URL
]


ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'
AUTH_USER_MODEL = 'account.CustomUser'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
