# worker_processes auto;
#
# error_log /var/log/nginx/error.log warn;
#
events {
    worker_connections 1024;
}

http {
    types_hash_max_size 2048;
    types_hash_bucket_size 128;
    include /etc/nginx/mime.types; 
    default_type  application/octet-stream;

    # include /etc/nginx/conf.d/*.conf;
    # include /etc/nginx/sites-enabled/*;

    server {
            listen 80;
            server_name localhost;
    		return 301 https://$host$request_uri; 
    }


    server {

        listen       443 ssl;

		ssl_protocols TLSv1.3;
		ssl_certificate /etc/ssl/certs/myserver.crt;
		ssl_certificate_key /etc/ssl/private/myserver.key;

        server_name localhost;

		root /var/www/html/;
        index index.html;

        client_max_body_size 50M;
        location / {
            try_files $uri /index.html;
        }

        location /api/ {
            proxy_pass http://api:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_pass_request_headers on;
            # proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header Upgrade $http_upgrade;
        }
        location /ws/ {
            # proxy_pass http://api:8000;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://api:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}



